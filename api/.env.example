# ============================================================================
# SMARTAUDIT API - VARIABLES DE ENTORNO
# ============================================================================
# Copia este archivo a .env y configura los valores según tu entorno
# IMPORTANTE: Nunca subas el archivo .env al repositorio

# ============================================================================
# CONFIGURACIÓN GENERAL
# ============================================================================
ENVIRONMENT=development
PORT=8001

# ============================================================================
# AZURE SQL DATABASE - CONFIGURACIÓN
# ============================================================================

# MÉTODO DE AUTENTICACIÓN (elige uno)
# Opciones:
#   - managed_identity: Usa Managed Identity de Azure (RECOMENDADO para producción en Azure)
#   - sql_auth: Usa usuario/contraseña (útil para desarrollo local)
AZURE_SQL_AUTH_METHOD=managed_identity

# ----------------------------------------------------------------------------
# CONFIGURACIÓN COMÚN (requerida para ambos métodos)
# ----------------------------------------------------------------------------

# Servidor de Azure SQL (sin incluir el protocolo)
# Ejemplo: smau-dev-sql.database.windows.net
AZURE_SQL_SERVER=your-sql-server.database.windows.net

# Nombre de la base de datos
AZURE_SQL_DATABASE=smau-dev-sqldb

# Driver ODBC (opcional, default: ODBC Driver 18 for SQL Server)
# Opciones comunes:
#   - ODBC Driver 18 for SQL Server (recomendado)
#   - ODBC Driver 17 for SQL Server
#   - SQL Server Native Client 11.0
AZURE_SQL_DRIVER=ODBC Driver 18 for SQL Server

# ----------------------------------------------------------------------------
# OPCIÓN 1: MANAGED IDENTITY (Recomendado para Azure Container Apps/VM)
# ----------------------------------------------------------------------------
# Solo requerido si usas AZURE_SQL_AUTH_METHOD=managed_identity

# Client ID de la Managed Identity (opcional)
# Si no se especifica, se usa DefaultAzureCredential que intenta:
#   1. System-assigned Managed Identity
#   2. User-assigned Managed Identity
#   3. Azure CLI credentials (desarrollo local)
# AZURE_MANAGED_IDENTITY_CLIENT_ID=your-managed-identity-client-id

# ----------------------------------------------------------------------------
# OPCIÓN 2: SQL AUTHENTICATION (Usuario/Contraseña)
# ----------------------------------------------------------------------------
# Solo requerido si usas AZURE_SQL_AUTH_METHOD=sql_auth

# Usuario de la base de datos
AZURE_SQL_USERNAME=your_username

# Contraseña del usuario
AZURE_SQL_PASSWORD=your_password

# ============================================================================
# AZURE STORAGE - CONFIGURACIÓN
# ============================================================================
# Connection string de Azure Storage para almacenar archivos
# Formato: DefaultEndpointsProtocol=https;AccountName=<nombre>;AccountKey=<key>;EndpointSuffix=core.windows.net
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=youraccount;AccountKey=yourkey;EndpointSuffix=core.windows.net

# Nombre del contenedor de Azure Storage para archivos
AZURE_STORAGE_CONTAINER=smartaudit-files

# ============================================================================
# CORS - ORÍGENES PERMITIDOS
# ============================================================================
# Lista de orígenes permitidos para CORS (separados por comas)
# Ya configurados en main.py:
#   - https://devapi.grantthornton.es
#   - https://testapi.grantthornton.es
#   - https://api.grantthornton.es
#   - http://localhost:3000
#   - http://localhost:4280

# ============================================================================
# LOGGING
# ============================================================================
# Nivel de logging (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ============================================================================
# CONTAINER APPS (Azure)
# ============================================================================
# Estas variables son configuradas automáticamente por Azure Container Apps
# No necesitas configurarlas localmente
# HOSTNAME=auto
# CONTAINER_APP_NAME=auto
# CONTAINER_APP_REVISION=auto

# ============================================================================
# NOTAS DE CONFIGURACIÓN
# ============================================================================
#
# 1. AZURE SQL DATABASE - MANAGED IDENTITY (RECOMENDADO PARA PRODUCCIÓN):
#
#    a) Habilitar Managed Identity en Azure Container Apps:
#       - En Azure Portal, ve a tu Container App
#       - Identity → System assigned → Status: On
#       - O crea una User-assigned Managed Identity
#
#    b) Dar permisos en Azure SQL:
#       - Conéctate a Azure SQL con un admin
#       - Ejecuta estos comandos SQL:
#
#         -- Para System-assigned Managed Identity:
#         CREATE USER [nombre-de-tu-container-app] FROM EXTERNAL PROVIDER;
#         ALTER ROLE db_datareader ADD MEMBER [nombre-de-tu-container-app];
#         ALTER ROLE db_datawriter ADD MEMBER [nombre-de-tu-container-app];
#         GRANT EXECUTE ON SCHEMA::workspace TO [nombre-de-tu-container-app];
#
#         -- Para User-assigned Managed Identity:
#         CREATE USER [nombre-de-managed-identity] FROM EXTERNAL PROVIDER;
#         ALTER ROLE db_datareader ADD MEMBER [nombre-de-managed-identity];
#         ALTER ROLE db_datawriter ADD MEMBER [nombre-de-managed-identity];
#         GRANT EXECUTE ON SCHEMA::workspace TO [nombre-de-managed-identity];
#
#    c) Configurar variables de entorno en Azure Container Apps:
#       AZURE_SQL_AUTH_METHOD=managed_identity
#       AZURE_SQL_SERVER=tu-servidor.database.windows.net
#       AZURE_SQL_DATABASE=tu-database
#
#    d) NO configures AZURE_SQL_USERNAME ni AZURE_SQL_PASSWORD
#
#    VENTAJAS:
#    - Sin credenciales en código o configuración
#    - Rotación automática de tokens
#    - Integración nativa con Azure AD
#    - Más seguro y recomendado por Microsoft
#
# 2. AZURE SQL DATABASE - SQL AUTHENTICATION (PARA DESARROLLO LOCAL):
#
#    a) Usa este método solo para desarrollo local
#
#    b) Configura:
#       AZURE_SQL_AUTH_METHOD=sql_auth
#       AZURE_SQL_SERVER=tu-servidor.database.windows.net
#       AZURE_SQL_DATABASE=tu-database
#       AZURE_SQL_USERNAME=tu_usuario
#       AZURE_SQL_PASSWORD=tu_password
#
#    c) Asegúrate de que el servidor permita conexiones desde tu IP:
#       - Azure Portal → SQL Server → Networking
#       - Add your client IPv4 address
#
#    d) El usuario debe tener permisos para ejecutar stored procedures:
#       GRANT EXECUTE ON SCHEMA::workspace TO [tu_usuario];
#
# 3. AZURE STORAGE:
#    - El contenedor debe existir antes de usar la aplicación
#    - Para Managed Identity, dar permisos: Storage Blob Data Contributor
#
# 4. DESARROLLO LOCAL CON MANAGED IDENTITY:
#    - Instala Azure CLI: https://docs.microsoft.com/cli/azure/install-azure-cli
#    - Ejecuta: az login
#    - DefaultAzureCredential usará tus credenciales de Azure CLI
#    - Útil para probar Managed Identity localmente
#
# 5. ODBC DRIVER:
#    - Instala ODBC Driver 18 for SQL Server:
#      https://learn.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server
#
# 6. SEGURIDAD EN PRODUCCIÓN:
#    - SIEMPRE usa Managed Identity en Azure
#    - Usa Azure Key Vault para otros secretos si es necesario
#    - Habilita firewall en Azure SQL (solo IPs específicas)
#    - Habilita auditoría en Azure SQL
#    - Usa Azure Private Link si es posible
#
# ============================================================================
